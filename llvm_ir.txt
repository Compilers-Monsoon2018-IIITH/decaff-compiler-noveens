; ModuleID = 'Noveen's compiler for decaf'
source_filename = "Noveen's compiler for decaf"

@done = global i32 0
@n = global i32 0
@0 = private unnamed_addr constant [4 x i8] c"%d \00"
@1 = private unnamed_addr constant [29 x i8] c"First %d fibonacci numbers: \00"
@2 = private unnamed_addr constant [2 x i8] c"1\00"
@3 = private unnamed_addr constant [3 x i8] c"1 \00"
@4 = private unnamed_addr constant [3 x i8] c"1 \00"

define void @fib(i32 %a, i32 %b) {
entry:
  %b2 = alloca i32
  %a1 = alloca i32
  store i32 %a, i32* %a1
  store i32 %b, i32* %b2
  %0 = load i32, i32* @done
  %1 = load i32, i32* @n
  %equalcomparetmp = icmp eq i32 %0, %1
  br i1 %equalcomparetmp, label %if, label %ifcont

if:                                               ; preds = %entry
  ret void

ifcont:                                           ; preds = %entry
  %2 = load i32, i32* %a1
  %3 = load i32, i32* %b2
  %addtmp = add i32 %2, %3
  %4 = call i32 @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 %addtmp)
  %5 = load i32, i32* @done
  %addEqualToTmp = add i32 %5, 1
  store i32 %addEqualToTmp, i32* @done
  %6 = load i32, i32* %a1
  %7 = load i32, i32* %b2
  %addtmp3 = add i32 %6, %7
  %8 = load i32, i32* %b2
  call void @fib(i32 %8, i32 %addtmp3)
  ret void
}

declare i32 @printf(i8*, i32)

define void @main() {
entry:
  %0 = load i32, i32* @n
  store i32 10, i32* @n
  %1 = load i32, i32* @n
  %2 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @1, i32 0, i32 0), i32 %1)
  %3 = load i32, i32* @n
  %equalcomparetmp = icmp eq i32 %3, 1
  br i1 %equalcomparetmp, label %if, label %else

if:                                               ; preds = %entry
  %4 = call i32 bitcast (i32 (i8*, i32)* @printf to i32 (i8*)*)(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  br label %ifcont

else:                                             ; preds = %entry
  %5 = call i32 bitcast (i32 (i8*, i32)* @printf to i32 (i8*)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0))
  %6 = call i32 bitcast (i32 (i8*, i32)* @printf to i32 (i8*)*)(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i32 0, i32 0))
  %7 = load i32, i32* @done
  store i32 2, i32* @done
  call void @fib(i32 1, i32 1)
  br label %ifcont

ifcont:                                           ; preds = %else, %if
  ret void
}
