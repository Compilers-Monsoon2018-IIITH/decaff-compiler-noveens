Grammar

    0 $accept: program $end

    1 program: CLASS PROG LEFT_CURLY field_decl method_decl RIGHT_CURLY

    2 field_decl: %empty
    3           | field_decl field_decls

    4 field_decls: type id follow SEMICOLON
    5            | type id LEFT_SQUARE int_literal RIGHT_SQUARE follow SEMICOLON

    6 follow: %empty
    7       | COMMA id follow
    8       | COMMA id LEFT_SQUARE int_literal RIGHT_SQUARE follow

    9 method_decl: %empty
   10            | method_decls method_decl

   11 method_decls: type id LEFT_ROUND RIGHT_ROUND block
   12             | type id LEFT_ROUND param type id RIGHT_ROUND block
   13             | VOID id LEFT_ROUND RIGHT_ROUND block
   14             | VOID id LEFT_ROUND param type id RIGHT_ROUND block

   15 param: %empty
   16      | param type id COMMA

   17 block: LEFT_CURLY multi_var_decl multi_statement RIGHT_CURLY

   18 multi_var_decl: %empty
   19               | multi_var_decl type multi_id id SEMICOLON

   20 multi_id: %empty
   21         | multi_id id COMMA

   22 multi_statement: %empty
   23                | multi_statement statement

   24 type: INT
   25     | BOOL

   26 statement: location assign_op expr SEMICOLON
   27          | method_call SEMICOLON
   28          | callout_call SEMICOLON
   29          | IF LEFT_ROUND expr RIGHT_ROUND block ELSE block
   30          | IF LEFT_ROUND expr RIGHT_ROUND block
   31          | FOR id EQ expr COMMA expr block
   32          | RET expr SEMICOLON
   33          | RET SEMICOLON
   34          | BREAK SEMICOLON
   35          | CONT SEMICOLON
   36          | block

   37 assign_op: EQ
   38          | MINEQ
   39          | PLUSEQ

   40 method_call: method_name LEFT_ROUND RIGHT_ROUND
   41            | method_name LEFT_ROUND multi_expr expr RIGHT_ROUND

   42 callout_call: CALLOUT LEFT_ROUND string_literal RIGHT_ROUND
   43             | CALLOUT LEFT_ROUND string_literal COMMA multi_callout_arg callout_arg RIGHT_ROUND

   44 multi_expr: %empty
   45           | multi_expr expr COMMA

   46 multi_callout_arg: %empty
   47                  | multi_callout_arg callout_arg COMMA

   48 method_name: id

   49 location: id
   50         | id LEFT_SQUARE expr RIGHT_SQUARE

   51 expr: location
   52     | method_call
   53     | callout_call
   54     | literal
   55     | expr PLUS expr
   56     | expr MINUS expr
   57     | expr MUL expr
   58     | expr DIV expr
   59     | expr MOD expr
   60     | expr LT expr
   61     | expr GT expr
   62     | expr LE expr
   63     | expr GE expr
   64     | expr EQEQ expr
   65     | expr NEQ expr
   66     | expr ANDAND expr
   67     | expr OROR expr
   68     | MINUS expr
   69     | NOT expr
   70     | LEFT_ROUND expr RIGHT_ROUND

   71 callout_arg: expr
   72            | string_literal

   73 literal: int_literal
   74        | char_literal
   75        | bool_literal

   76 id: REGEX_ID

   77 int_literal: REGEX_DECIMAL
   78            | REGEX_HEX

   79 bool_literal: TRUE
   80             | FALSE

   81 char_literal: REGEX_CHAR

   82 string_literal: REGEX_STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
PROG (258) 1
CLASS (259) 1
LEFT_CURLY (260) 1 17
RIGHT_CURLY (261) 1 17
LEFT_SQUARE (262) 5 8 50
RIGHT_SQUARE (263) 5 8 50
LEFT_ROUND (264) 11 12 13 14 29 30 40 41 42 43 70
RIGHT_ROUND (265) 11 12 13 14 29 30 40 41 42 43 70
VOID (266) 13 14
INT (267) 24
BOOL (268) 25
IF (269) 29 30
ELSE (270) 29
FOR (271) 31
RET (272) 32 33
BREAK (273) 34
CONT (274) 35
CALLOUT (275) 42 43
TRUE (276) 79
FALSE (277) 80
COMMA (278) 7 8 16 21 31 43 45 47
SEMICOLON (279) 4 5 19 26 27 28 32 33 34 35
REGEX_HEX (280) 78
REGEX_ID (281) 76
REGEX_DECIMAL (282) 77
REGEX_CHAR (283) 81
REGEX_STRING (284) 82
ANDAND (285) 66
OROR (286) 67
NOT (287) 69
NEQ (288) 65
EQEQ (289) 64
LT (290) 60
GT (291) 61
LE (292) 62
GE (293) 63
PLUS (294) 55
MINUS (295) 56 68
MUL (296) 57
DIV (297) 58
MOD (298) 59
PLUSEQ (299) 39
MINEQ (300) 38
EQ (301) 31 37


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
field_decl (49)
    on left: 2 3, on right: 1 3
field_decls (50)
    on left: 4 5, on right: 3
follow (51)
    on left: 6 7 8, on right: 4 5 7 8
method_decl (52)
    on left: 9 10, on right: 1 10
method_decls (53)
    on left: 11 12 13 14, on right: 10
param (54)
    on left: 15 16, on right: 12 14 16
block (55)
    on left: 17, on right: 11 12 13 14 29 30 31 36
multi_var_decl (56)
    on left: 18 19, on right: 17 19
multi_id (57)
    on left: 20 21, on right: 19 21
multi_statement (58)
    on left: 22 23, on right: 17 23
type (59)
    on left: 24 25, on right: 4 5 11 12 14 16 19
statement (60)
    on left: 26 27 28 29 30 31 32 33 34 35 36, on right: 23
assign_op (61)
    on left: 37 38 39, on right: 26
method_call (62)
    on left: 40 41, on right: 27 52
callout_call (63)
    on left: 42 43, on right: 28 53
multi_expr (64)
    on left: 44 45, on right: 41 45
multi_callout_arg (65)
    on left: 46 47, on right: 43 47
method_name (66)
    on left: 48, on right: 40 41
location (67)
    on left: 49 50, on right: 26 51
expr (68)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70, on right: 26 29 30 31 32 41 45 50 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71
callout_arg (69)
    on left: 71 72, on right: 43 47
literal (70)
    on left: 73 74 75, on right: 54
id (71)
    on left: 76, on right: 4 5 7 8 11 12 13 14 16 19 21 31 48 49 50
int_literal (72)
    on left: 77 78, on right: 5 8 73
bool_literal (73)
    on left: 79 80, on right: 75
char_literal (74)
    on left: 81, on right: 74
string_literal (75)
    on left: 82, on right: 42 43 72


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program  go to state 2


State 1

    1 program: CLASS . PROG LEFT_CURLY field_decl method_decl RIGHT_CURLY

    PROG  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: CLASS PROG . LEFT_CURLY field_decl method_decl RIGHT_CURLY

    LEFT_CURLY  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: CLASS PROG LEFT_CURLY . field_decl method_decl RIGHT_CURLY

    $default  reduce using rule 2 (field_decl)

    field_decl  go to state 6


State 6

    1 program: CLASS PROG LEFT_CURLY field_decl . method_decl RIGHT_CURLY
    3 field_decl: field_decl . field_decls

    VOID  shift, and go to state 7
    INT   shift, and go to state 8
    BOOL  shift, and go to state 9

    $default  reduce using rule 9 (method_decl)

    field_decls   go to state 10
    method_decl   go to state 11
    method_decls  go to state 12
    type          go to state 13


State 7

   13 method_decls: VOID . id LEFT_ROUND RIGHT_ROUND block
   14             | VOID . id LEFT_ROUND param type id RIGHT_ROUND block

    REGEX_ID  shift, and go to state 14

    id  go to state 15


State 8

   24 type: INT .

    $default  reduce using rule 24 (type)


State 9

   25 type: BOOL .

    $default  reduce using rule 25 (type)


State 10

    3 field_decl: field_decl field_decls .

    $default  reduce using rule 3 (field_decl)


State 11

    1 program: CLASS PROG LEFT_CURLY field_decl method_decl . RIGHT_CURLY

    RIGHT_CURLY  shift, and go to state 16


State 12

   10 method_decl: method_decls . method_decl

    VOID  shift, and go to state 7
    INT   shift, and go to state 8
    BOOL  shift, and go to state 9

    $default  reduce using rule 9 (method_decl)

    method_decl   go to state 17
    method_decls  go to state 12
    type          go to state 18


State 13

    4 field_decls: type . id follow SEMICOLON
    5            | type . id LEFT_SQUARE int_literal RIGHT_SQUARE follow SEMICOLON
   11 method_decls: type . id LEFT_ROUND RIGHT_ROUND block
   12             | type . id LEFT_ROUND param type id RIGHT_ROUND block

    REGEX_ID  shift, and go to state 14

    id  go to state 19


State 14

   76 id: REGEX_ID .

    $default  reduce using rule 76 (id)


State 15

   13 method_decls: VOID id . LEFT_ROUND RIGHT_ROUND block
   14             | VOID id . LEFT_ROUND param type id RIGHT_ROUND block

    LEFT_ROUND  shift, and go to state 20


State 16

    1 program: CLASS PROG LEFT_CURLY field_decl method_decl RIGHT_CURLY .

    $default  reduce using rule 1 (program)


State 17

   10 method_decl: method_decls method_decl .

    $default  reduce using rule 10 (method_decl)


State 18

   11 method_decls: type . id LEFT_ROUND RIGHT_ROUND block
   12             | type . id LEFT_ROUND param type id RIGHT_ROUND block

    REGEX_ID  shift, and go to state 14

    id  go to state 21


State 19

    4 field_decls: type id . follow SEMICOLON
    5            | type id . LEFT_SQUARE int_literal RIGHT_SQUARE follow SEMICOLON
   11 method_decls: type id . LEFT_ROUND RIGHT_ROUND block
   12             | type id . LEFT_ROUND param type id RIGHT_ROUND block

    LEFT_SQUARE  shift, and go to state 22
    LEFT_ROUND   shift, and go to state 23
    COMMA        shift, and go to state 24

    $default  reduce using rule 6 (follow)

    follow  go to state 25


State 20

   13 method_decls: VOID id LEFT_ROUND . RIGHT_ROUND block
   14             | VOID id LEFT_ROUND . param type id RIGHT_ROUND block

    RIGHT_ROUND  shift, and go to state 26

    $default  reduce using rule 15 (param)

    param  go to state 27


State 21

   11 method_decls: type id . LEFT_ROUND RIGHT_ROUND block
   12             | type id . LEFT_ROUND param type id RIGHT_ROUND block

    LEFT_ROUND  shift, and go to state 23


State 22

    5 field_decls: type id LEFT_SQUARE . int_literal RIGHT_SQUARE follow SEMICOLON

    REGEX_HEX      shift, and go to state 28
    REGEX_DECIMAL  shift, and go to state 29

    int_literal  go to state 30


State 23

   11 method_decls: type id LEFT_ROUND . RIGHT_ROUND block
   12             | type id LEFT_ROUND . param type id RIGHT_ROUND block

    RIGHT_ROUND  shift, and go to state 31

    $default  reduce using rule 15 (param)

    param  go to state 32


State 24

    7 follow: COMMA . id follow
    8       | COMMA . id LEFT_SQUARE int_literal RIGHT_SQUARE follow

    REGEX_ID  shift, and go to state 14

    id  go to state 33


State 25

    4 field_decls: type id follow . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 26

   13 method_decls: VOID id LEFT_ROUND RIGHT_ROUND . block

    LEFT_CURLY  shift, and go to state 35

    block  go to state 36


State 27

   14 method_decls: VOID id LEFT_ROUND param . type id RIGHT_ROUND block
   16 param: param . type id COMMA

    INT   shift, and go to state 8
    BOOL  shift, and go to state 9

    type  go to state 37


State 28

   78 int_literal: REGEX_HEX .

    $default  reduce using rule 78 (int_literal)


State 29

   77 int_literal: REGEX_DECIMAL .

    $default  reduce using rule 77 (int_literal)


State 30

    5 field_decls: type id LEFT_SQUARE int_literal . RIGHT_SQUARE follow SEMICOLON

    RIGHT_SQUARE  shift, and go to state 38


State 31

   11 method_decls: type id LEFT_ROUND RIGHT_ROUND . block

    LEFT_CURLY  shift, and go to state 35

    block  go to state 39


State 32

   12 method_decls: type id LEFT_ROUND param . type id RIGHT_ROUND block
   16 param: param . type id COMMA

    INT   shift, and go to state 8
    BOOL  shift, and go to state 9

    type  go to state 40


State 33

    7 follow: COMMA id . follow
    8       | COMMA id . LEFT_SQUARE int_literal RIGHT_SQUARE follow

    LEFT_SQUARE  shift, and go to state 41
    COMMA        shift, and go to state 24

    $default  reduce using rule 6 (follow)

    follow  go to state 42


State 34

    4 field_decls: type id follow SEMICOLON .

    $default  reduce using rule 4 (field_decls)


State 35

   17 block: LEFT_CURLY . multi_var_decl multi_statement RIGHT_CURLY

    $default  reduce using rule 18 (multi_var_decl)

    multi_var_decl  go to state 43


State 36

   13 method_decls: VOID id LEFT_ROUND RIGHT_ROUND block .

    $default  reduce using rule 13 (method_decls)


State 37

   14 method_decls: VOID id LEFT_ROUND param type . id RIGHT_ROUND block
   16 param: param type . id COMMA

    REGEX_ID  shift, and go to state 14

    id  go to state 44


State 38

    5 field_decls: type id LEFT_SQUARE int_literal RIGHT_SQUARE . follow SEMICOLON

    COMMA  shift, and go to state 24

    $default  reduce using rule 6 (follow)

    follow  go to state 45


State 39

   11 method_decls: type id LEFT_ROUND RIGHT_ROUND block .

    $default  reduce using rule 11 (method_decls)


State 40

   12 method_decls: type id LEFT_ROUND param type . id RIGHT_ROUND block
   16 param: param type . id COMMA

    REGEX_ID  shift, and go to state 14

    id  go to state 46


State 41

    8 follow: COMMA id LEFT_SQUARE . int_literal RIGHT_SQUARE follow

    REGEX_HEX      shift, and go to state 28
    REGEX_DECIMAL  shift, and go to state 29

    int_literal  go to state 47


State 42

    7 follow: COMMA id follow .

    $default  reduce using rule 7 (follow)


State 43

   17 block: LEFT_CURLY multi_var_decl . multi_statement RIGHT_CURLY
   19 multi_var_decl: multi_var_decl . type multi_id id SEMICOLON

    INT   shift, and go to state 8
    BOOL  shift, and go to state 9

    $default  reduce using rule 22 (multi_statement)

    multi_statement  go to state 48
    type             go to state 49


State 44

   14 method_decls: VOID id LEFT_ROUND param type id . RIGHT_ROUND block
   16 param: param type id . COMMA

    RIGHT_ROUND  shift, and go to state 50
    COMMA        shift, and go to state 51


State 45

    5 field_decls: type id LEFT_SQUARE int_literal RIGHT_SQUARE follow . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 46

   12 method_decls: type id LEFT_ROUND param type id . RIGHT_ROUND block
   16 param: param type id . COMMA

    RIGHT_ROUND  shift, and go to state 53
    COMMA        shift, and go to state 51


State 47

    8 follow: COMMA id LEFT_SQUARE int_literal . RIGHT_SQUARE follow

    RIGHT_SQUARE  shift, and go to state 54


State 48

   17 block: LEFT_CURLY multi_var_decl multi_statement . RIGHT_CURLY
   23 multi_statement: multi_statement . statement

    LEFT_CURLY   shift, and go to state 35
    RIGHT_CURLY  shift, and go to state 55
    IF           shift, and go to state 56
    FOR          shift, and go to state 57
    RET          shift, and go to state 58
    BREAK        shift, and go to state 59
    CONT         shift, and go to state 60
    CALLOUT      shift, and go to state 61
    REGEX_ID     shift, and go to state 14

    block         go to state 62
    statement     go to state 63
    method_call   go to state 64
    callout_call  go to state 65
    method_name   go to state 66
    location      go to state 67
    id            go to state 68


State 49

   19 multi_var_decl: multi_var_decl type . multi_id id SEMICOLON

    $default  reduce using rule 20 (multi_id)

    multi_id  go to state 69


State 50

   14 method_decls: VOID id LEFT_ROUND param type id RIGHT_ROUND . block

    LEFT_CURLY  shift, and go to state 35

    block  go to state 70


State 51

   16 param: param type id COMMA .

    $default  reduce using rule 16 (param)


State 52

    5 field_decls: type id LEFT_SQUARE int_literal RIGHT_SQUARE follow SEMICOLON .

    $default  reduce using rule 5 (field_decls)


State 53

   12 method_decls: type id LEFT_ROUND param type id RIGHT_ROUND . block

    LEFT_CURLY  shift, and go to state 35

    block  go to state 71


State 54

    8 follow: COMMA id LEFT_SQUARE int_literal RIGHT_SQUARE . follow

    COMMA  shift, and go to state 24

    $default  reduce using rule 6 (follow)

    follow  go to state 72


State 55

   17 block: LEFT_CURLY multi_var_decl multi_statement RIGHT_CURLY .

    $default  reduce using rule 17 (block)


State 56

   29 statement: IF . LEFT_ROUND expr RIGHT_ROUND block ELSE block
   30          | IF . LEFT_ROUND expr RIGHT_ROUND block

    LEFT_ROUND  shift, and go to state 73


State 57

   31 statement: FOR . id EQ expr COMMA expr block

    REGEX_ID  shift, and go to state 14

    id  go to state 74


State 58

   32 statement: RET . expr SEMICOLON
   33          | RET . SEMICOLON

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    SEMICOLON      shift, and go to state 78
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 85
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 59

   34 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 60

   35 statement: CONT . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 61

   42 callout_call: CALLOUT . LEFT_ROUND string_literal RIGHT_ROUND
   43             | CALLOUT . LEFT_ROUND string_literal COMMA multi_callout_arg callout_arg RIGHT_ROUND

    LEFT_ROUND  shift, and go to state 92


State 62

   36 statement: block .

    $default  reduce using rule 36 (statement)


State 63

   23 multi_statement: multi_statement statement .

    $default  reduce using rule 23 (multi_statement)


State 64

   27 statement: method_call . SEMICOLON

    SEMICOLON  shift, and go to state 93


State 65

   28 statement: callout_call . SEMICOLON

    SEMICOLON  shift, and go to state 94


State 66

   40 method_call: method_name . LEFT_ROUND RIGHT_ROUND
   41            | method_name . LEFT_ROUND multi_expr expr RIGHT_ROUND

    LEFT_ROUND  shift, and go to state 95


State 67

   26 statement: location . assign_op expr SEMICOLON

    PLUSEQ  shift, and go to state 96
    MINEQ   shift, and go to state 97
    EQ      shift, and go to state 98

    assign_op  go to state 99


State 68

   48 method_name: id .
   49 location: id .
   50         | id . LEFT_SQUARE expr RIGHT_SQUARE

    LEFT_SQUARE  shift, and go to state 100

    LEFT_ROUND  reduce using rule 48 (method_name)
    $default    reduce using rule 49 (location)


State 69

   19 multi_var_decl: multi_var_decl type multi_id . id SEMICOLON
   21 multi_id: multi_id . id COMMA

    REGEX_ID  shift, and go to state 14

    id  go to state 101


State 70

   14 method_decls: VOID id LEFT_ROUND param type id RIGHT_ROUND block .

    $default  reduce using rule 14 (method_decls)


State 71

   12 method_decls: type id LEFT_ROUND param type id RIGHT_ROUND block .

    $default  reduce using rule 12 (method_decls)


State 72

    8 follow: COMMA id LEFT_SQUARE int_literal RIGHT_SQUARE follow .

    $default  reduce using rule 8 (follow)


State 73

   29 statement: IF LEFT_ROUND . expr RIGHT_ROUND block ELSE block
   30          | IF LEFT_ROUND . expr RIGHT_ROUND block

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 102
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 74

   31 statement: FOR id . EQ expr COMMA expr block

    EQ  shift, and go to state 103


State 75

   70 expr: LEFT_ROUND . expr RIGHT_ROUND

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 104
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 76

   79 bool_literal: TRUE .

    $default  reduce using rule 79 (bool_literal)


State 77

   80 bool_literal: FALSE .

    $default  reduce using rule 80 (bool_literal)


State 78

   33 statement: RET SEMICOLON .

    $default  reduce using rule 33 (statement)


State 79

   81 char_literal: REGEX_CHAR .

    $default  reduce using rule 81 (char_literal)


State 80

   69 expr: NOT . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 105
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 81

   68 expr: MINUS . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 106
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 82

   52 expr: method_call .

    $default  reduce using rule 52 (expr)


State 83

   53 expr: callout_call .

    $default  reduce using rule 53 (expr)


State 84

   51 expr: location .

    $default  reduce using rule 51 (expr)


State 85

   32 statement: RET expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    SEMICOLON  shift, and go to state 107
    ANDAND     shift, and go to state 108
    OROR       shift, and go to state 109
    NEQ        shift, and go to state 110
    EQEQ       shift, and go to state 111
    LT         shift, and go to state 112
    GT         shift, and go to state 113
    LE         shift, and go to state 114
    GE         shift, and go to state 115
    PLUS       shift, and go to state 116
    MINUS      shift, and go to state 117
    MUL        shift, and go to state 118
    DIV        shift, and go to state 119
    MOD        shift, and go to state 120


State 86

   54 expr: literal .

    $default  reduce using rule 54 (expr)


State 87

   73 literal: int_literal .

    $default  reduce using rule 73 (literal)


State 88

   75 literal: bool_literal .

    $default  reduce using rule 75 (literal)


State 89

   74 literal: char_literal .

    $default  reduce using rule 74 (literal)


State 90

   34 statement: BREAK SEMICOLON .

    $default  reduce using rule 34 (statement)


State 91

   35 statement: CONT SEMICOLON .

    $default  reduce using rule 35 (statement)


State 92

   42 callout_call: CALLOUT LEFT_ROUND . string_literal RIGHT_ROUND
   43             | CALLOUT LEFT_ROUND . string_literal COMMA multi_callout_arg callout_arg RIGHT_ROUND

    REGEX_STRING  shift, and go to state 121

    string_literal  go to state 122


State 93

   27 statement: method_call SEMICOLON .

    $default  reduce using rule 27 (statement)


State 94

   28 statement: callout_call SEMICOLON .

    $default  reduce using rule 28 (statement)


State 95

   40 method_call: method_name LEFT_ROUND . RIGHT_ROUND
   41            | method_name LEFT_ROUND . multi_expr expr RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 123

    $default  reduce using rule 44 (multi_expr)

    multi_expr  go to state 124


State 96

   39 assign_op: PLUSEQ .

    $default  reduce using rule 39 (assign_op)


State 97

   38 assign_op: MINEQ .

    $default  reduce using rule 38 (assign_op)


State 98

   37 assign_op: EQ .

    $default  reduce using rule 37 (assign_op)


State 99

   26 statement: location assign_op . expr SEMICOLON

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 125
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 100

   50 location: id LEFT_SQUARE . expr RIGHT_SQUARE

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 126
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 101

   19 multi_var_decl: multi_var_decl type multi_id id . SEMICOLON
   21 multi_id: multi_id id . COMMA

    COMMA      shift, and go to state 127
    SEMICOLON  shift, and go to state 128


State 102

   29 statement: IF LEFT_ROUND expr . RIGHT_ROUND block ELSE block
   30          | IF LEFT_ROUND expr . RIGHT_ROUND block
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    RIGHT_ROUND  shift, and go to state 129
    ANDAND       shift, and go to state 108
    OROR         shift, and go to state 109
    NEQ          shift, and go to state 110
    EQEQ         shift, and go to state 111
    LT           shift, and go to state 112
    GT           shift, and go to state 113
    LE           shift, and go to state 114
    GE           shift, and go to state 115
    PLUS         shift, and go to state 116
    MINUS        shift, and go to state 117
    MUL          shift, and go to state 118
    DIV          shift, and go to state 119
    MOD          shift, and go to state 120


State 103

   31 statement: FOR id EQ . expr COMMA expr block

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 130
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 104

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr
   70     | LEFT_ROUND expr . RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 131
    ANDAND       shift, and go to state 108
    OROR         shift, and go to state 109
    NEQ          shift, and go to state 110
    EQEQ         shift, and go to state 111
    LT           shift, and go to state 112
    GT           shift, and go to state 113
    LE           shift, and go to state 114
    GE           shift, and go to state 115
    PLUS         shift, and go to state 116
    MINUS        shift, and go to state 117
    MUL          shift, and go to state 118
    DIV          shift, and go to state 119
    MOD          shift, and go to state 120


State 105

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr
   69     | NOT expr .

    LT     shift, and go to state 112
    GT     shift, and go to state 113
    LE     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 69 (expr)


State 106

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr
   68     | MINUS expr .

    MUL  shift, and go to state 118
    DIV  shift, and go to state 119
    MOD  shift, and go to state 120

    $default  reduce using rule 68 (expr)


State 107

   32 statement: RET expr SEMICOLON .

    $default  reduce using rule 32 (statement)


State 108

   66 expr: expr ANDAND . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 132
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 109

   67 expr: expr OROR . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 133
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 110

   65 expr: expr NEQ . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 134
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 111

   64 expr: expr EQEQ . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 135
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 112

   60 expr: expr LT . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 136
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 113

   61 expr: expr GT . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 137
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 114

   62 expr: expr LE . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 138
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 115

   63 expr: expr GE . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 139
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 116

   55 expr: expr PLUS . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 140
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 117

   56 expr: expr MINUS . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 141
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 118

   57 expr: expr MUL . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 142
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 119

   58 expr: expr DIV . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 143
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 120

   59 expr: expr MOD . expr

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 144
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 121

   82 string_literal: REGEX_STRING .

    $default  reduce using rule 82 (string_literal)


State 122

   42 callout_call: CALLOUT LEFT_ROUND string_literal . RIGHT_ROUND
   43             | CALLOUT LEFT_ROUND string_literal . COMMA multi_callout_arg callout_arg RIGHT_ROUND

    RIGHT_ROUND  shift, and go to state 145
    COMMA        shift, and go to state 146


State 123

   40 method_call: method_name LEFT_ROUND RIGHT_ROUND .

    $default  reduce using rule 40 (method_call)


State 124

   41 method_call: method_name LEFT_ROUND multi_expr . expr RIGHT_ROUND
   45 multi_expr: multi_expr . expr COMMA

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 147
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 125

   26 statement: location assign_op expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    SEMICOLON  shift, and go to state 148
    ANDAND     shift, and go to state 108
    OROR       shift, and go to state 109
    NEQ        shift, and go to state 110
    EQEQ       shift, and go to state 111
    LT         shift, and go to state 112
    GT         shift, and go to state 113
    LE         shift, and go to state 114
    GE         shift, and go to state 115
    PLUS       shift, and go to state 116
    MINUS      shift, and go to state 117
    MUL        shift, and go to state 118
    DIV        shift, and go to state 119
    MOD        shift, and go to state 120


State 126

   50 location: id LEFT_SQUARE expr . RIGHT_SQUARE
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    RIGHT_SQUARE  shift, and go to state 149
    ANDAND        shift, and go to state 108
    OROR          shift, and go to state 109
    NEQ           shift, and go to state 110
    EQEQ          shift, and go to state 111
    LT            shift, and go to state 112
    GT            shift, and go to state 113
    LE            shift, and go to state 114
    GE            shift, and go to state 115
    PLUS          shift, and go to state 116
    MINUS         shift, and go to state 117
    MUL           shift, and go to state 118
    DIV           shift, and go to state 119
    MOD           shift, and go to state 120


State 127

   21 multi_id: multi_id id COMMA .

    $default  reduce using rule 21 (multi_id)


State 128

   19 multi_var_decl: multi_var_decl type multi_id id SEMICOLON .

    $default  reduce using rule 19 (multi_var_decl)


State 129

   29 statement: IF LEFT_ROUND expr RIGHT_ROUND . block ELSE block
   30          | IF LEFT_ROUND expr RIGHT_ROUND . block

    LEFT_CURLY  shift, and go to state 35

    block  go to state 150


State 130

   31 statement: FOR id EQ expr . COMMA expr block
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    COMMA   shift, and go to state 151
    ANDAND  shift, and go to state 108
    OROR    shift, and go to state 109
    NEQ     shift, and go to state 110
    EQEQ    shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    GE      shift, and go to state 115
    PLUS    shift, and go to state 116
    MINUS   shift, and go to state 117
    MUL     shift, and go to state 118
    DIV     shift, and go to state 119
    MOD     shift, and go to state 120


State 131

   70 expr: LEFT_ROUND expr RIGHT_ROUND .

    $default  reduce using rule 70 (expr)


State 132

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   66     | expr ANDAND expr .
   67     | expr . OROR expr

    LT     shift, and go to state 112
    GT     shift, and go to state 113
    LE     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 66 (expr)


State 133

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr
   67     | expr OROR expr .

    LT     shift, and go to state 112
    GT     shift, and go to state 113
    LE     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 67 (expr)


State 134

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   65     | expr NEQ expr .
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    LT     shift, and go to state 112
    GT     shift, and go to state 113
    LE     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 65 (expr)


State 135

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   64     | expr EQEQ expr .
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    LT     shift, and go to state 112
    GT     shift, and go to state 113
    LE     shift, and go to state 114
    GE     shift, and go to state 115
    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 64 (expr)


State 136

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   60     | expr LT expr .
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 60 (expr)


State 137

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   61     | expr GT expr .
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 61 (expr)


State 138

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   62     | expr LE expr .
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 62 (expr)


State 139

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   63     | expr GE expr .
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    PLUS   shift, and go to state 116
    MINUS  shift, and go to state 117
    MUL    shift, and go to state 118
    DIV    shift, and go to state 119
    MOD    shift, and go to state 120

    $default  reduce using rule 63 (expr)


State 140

   55 expr: expr . PLUS expr
   55     | expr PLUS expr .
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    MUL  shift, and go to state 118
    DIV  shift, and go to state 119
    MOD  shift, and go to state 120

    $default  reduce using rule 55 (expr)


State 141

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   56     | expr MINUS expr .
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    MUL  shift, and go to state 118
    DIV  shift, and go to state 119
    MOD  shift, and go to state 120

    $default  reduce using rule 56 (expr)


State 142

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   57     | expr MUL expr .
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    MOD  shift, and go to state 120

    $default  reduce using rule 57 (expr)


State 143

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   58     | expr DIV expr .
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    MOD  shift, and go to state 120

    $default  reduce using rule 58 (expr)


State 144

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   59     | expr MOD expr .
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    MOD  error (nonassociative)

    $default  reduce using rule 59 (expr)


State 145

   42 callout_call: CALLOUT LEFT_ROUND string_literal RIGHT_ROUND .

    $default  reduce using rule 42 (callout_call)


State 146

   43 callout_call: CALLOUT LEFT_ROUND string_literal COMMA . multi_callout_arg callout_arg RIGHT_ROUND

    $default  reduce using rule 46 (multi_callout_arg)

    multi_callout_arg  go to state 152


State 147

   41 method_call: method_name LEFT_ROUND multi_expr expr . RIGHT_ROUND
   45 multi_expr: multi_expr expr . COMMA
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    RIGHT_ROUND  shift, and go to state 153
    COMMA        shift, and go to state 154
    ANDAND       shift, and go to state 108
    OROR         shift, and go to state 109
    NEQ          shift, and go to state 110
    EQEQ         shift, and go to state 111
    LT           shift, and go to state 112
    GT           shift, and go to state 113
    LE           shift, and go to state 114
    GE           shift, and go to state 115
    PLUS         shift, and go to state 116
    MINUS        shift, and go to state 117
    MUL          shift, and go to state 118
    DIV          shift, and go to state 119
    MOD          shift, and go to state 120


State 148

   26 statement: location assign_op expr SEMICOLON .

    $default  reduce using rule 26 (statement)


State 149

   50 location: id LEFT_SQUARE expr RIGHT_SQUARE .

    $default  reduce using rule 50 (location)


State 150

   29 statement: IF LEFT_ROUND expr RIGHT_ROUND block . ELSE block
   30          | IF LEFT_ROUND expr RIGHT_ROUND block .

    ELSE  shift, and go to state 155

    $default  reduce using rule 30 (statement)


State 151

   31 statement: FOR id EQ expr COMMA . expr block

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call   go to state 82
    callout_call  go to state 83
    method_name   go to state 66
    location      go to state 84
    expr          go to state 156
    literal       go to state 86
    id            go to state 68
    int_literal   go to state 87
    bool_literal  go to state 88
    char_literal  go to state 89


State 152

   43 callout_call: CALLOUT LEFT_ROUND string_literal COMMA multi_callout_arg . callout_arg RIGHT_ROUND
   47 multi_callout_arg: multi_callout_arg . callout_arg COMMA

    LEFT_ROUND     shift, and go to state 75
    CALLOUT        shift, and go to state 61
    TRUE           shift, and go to state 76
    FALSE          shift, and go to state 77
    REGEX_HEX      shift, and go to state 28
    REGEX_ID       shift, and go to state 14
    REGEX_DECIMAL  shift, and go to state 29
    REGEX_CHAR     shift, and go to state 79
    REGEX_STRING   shift, and go to state 121
    NOT            shift, and go to state 80
    MINUS          shift, and go to state 81

    method_call     go to state 82
    callout_call    go to state 83
    method_name     go to state 66
    location        go to state 84
    expr            go to state 157
    callout_arg     go to state 158
    literal         go to state 86
    id              go to state 68
    int_literal     go to state 87
    bool_literal    go to state 88
    char_literal    go to state 89
    string_literal  go to state 159


State 153

   41 method_call: method_name LEFT_ROUND multi_expr expr RIGHT_ROUND .

    $default  reduce using rule 41 (method_call)


State 154

   45 multi_expr: multi_expr expr COMMA .

    $default  reduce using rule 45 (multi_expr)


State 155

   29 statement: IF LEFT_ROUND expr RIGHT_ROUND block ELSE . block

    LEFT_CURLY  shift, and go to state 35

    block  go to state 160


State 156

   31 statement: FOR id EQ expr COMMA expr . block
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr

    LEFT_CURLY  shift, and go to state 35
    ANDAND      shift, and go to state 108
    OROR        shift, and go to state 109
    NEQ         shift, and go to state 110
    EQEQ        shift, and go to state 111
    LT          shift, and go to state 112
    GT          shift, and go to state 113
    LE          shift, and go to state 114
    GE          shift, and go to state 115
    PLUS        shift, and go to state 116
    MINUS       shift, and go to state 117
    MUL         shift, and go to state 118
    DIV         shift, and go to state 119
    MOD         shift, and go to state 120

    block  go to state 161


State 157

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . MUL expr
   58     | expr . DIV expr
   59     | expr . MOD expr
   60     | expr . LT expr
   61     | expr . GT expr
   62     | expr . LE expr
   63     | expr . GE expr
   64     | expr . EQEQ expr
   65     | expr . NEQ expr
   66     | expr . ANDAND expr
   67     | expr . OROR expr
   71 callout_arg: expr .

    ANDAND  shift, and go to state 108
    OROR    shift, and go to state 109
    NEQ     shift, and go to state 110
    EQEQ    shift, and go to state 111
    LT      shift, and go to state 112
    GT      shift, and go to state 113
    LE      shift, and go to state 114
    GE      shift, and go to state 115
    PLUS    shift, and go to state 116
    MINUS   shift, and go to state 117
    MUL     shift, and go to state 118
    DIV     shift, and go to state 119
    MOD     shift, and go to state 120

    $default  reduce using rule 71 (callout_arg)


State 158

   43 callout_call: CALLOUT LEFT_ROUND string_literal COMMA multi_callout_arg callout_arg . RIGHT_ROUND
   47 multi_callout_arg: multi_callout_arg callout_arg . COMMA

    RIGHT_ROUND  shift, and go to state 162
    COMMA        shift, and go to state 163


State 159

   72 callout_arg: string_literal .

    $default  reduce using rule 72 (callout_arg)


State 160

   29 statement: IF LEFT_ROUND expr RIGHT_ROUND block ELSE block .

    $default  reduce using rule 29 (statement)


State 161

   31 statement: FOR id EQ expr COMMA expr block .

    $default  reduce using rule 31 (statement)


State 162

   43 callout_call: CALLOUT LEFT_ROUND string_literal COMMA multi_callout_arg callout_arg RIGHT_ROUND .

    $default  reduce using rule 43 (callout_call)


State 163

   47 multi_callout_arg: multi_callout_arg callout_arg COMMA .

    $default  reduce using rule 47 (multi_callout_arg)
