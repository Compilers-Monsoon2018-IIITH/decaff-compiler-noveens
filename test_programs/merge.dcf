class Program{
    int a[30];
    int temp[30]; 
     
    void mergesort(int i, int j)
    {
        int mid;
        int st1,st2,end1,end2;
        int i,j,k;
        
        
        if(i >= j){
            return;
        }
        mid=(i+j)/2;
        
        mergesort(i,mid);        
        mergesort(mid+1,j);    


        st1 = i;
        end1 = mid;
        st2 = mid+1;
        end2 = j;
        
        i=st1;
        j=st2;
        k=0;
        

        for garbage = 0, (i<=end1) && (j<=end2 ) 
        {
            if(a[i]<a[j]){
                temp[k]=a[i];
                k+=1;
                a+=1;
            }
            else{
                temp[k]=a[j];
                k+=1;
                j+=1;
            }
        }
        
        for garbage1 = 0, i<=end1{
            temp[k]=a[i];
            k+=1;
            i+=1;
        }
            
        for garbage2 = 0, j<=end2{  
            temp[k]=a[j];
            k+=1;
            j+=1;
        }
            
        i=st1;
        j=0;

        for garbage3 = 0, i<=end2
        {
            a[i]=temp[j];
            i+=1;
            j+=1;
        }
    }

    int main()
    {
        int n;
        int x;
        n = 5;
        x = 5;
        for i2 = 0, i2<n
        {
            a[i2] = x;
            x-=1;
        }
            
        mergesort(0, n-1);
        
        for i1=0, i1<n
        {
            callout("printf","%d ",a[i1]);
        }
            
        return 0;
    }
}